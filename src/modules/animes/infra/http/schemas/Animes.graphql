# import User from '../../../../users/infra/http/schemas/Users.graphql';
# import Character from '../../../../characters/infra/http/schemas/Characters.graphql';
input UpdateAnimeInput {
  id: String!
  title: String
  description: String
  episodesAmount: Int
}

input CreateAnimeInput {
  title: String!
  description: String!
  episodesAmount: Int!
}

type CharacterAnimeEdge {
  id: String!
  role: String
  character_id: String!
  anime_id: String!
  node: Character!
  created_at: String!
  updated_at: String!
}

type CharacterAnimeConnection {
  edges: [CharacterAnimeEdge!]!
}

type Anime {
  id: ID!
  title: String!
  description: String
  episodesAmount: Int!
  profile: String
  banner: String
  profile_url: String
  banner_url: String
  createdBy: User
  characters: CharacterAnimeConnection!
  created_at: String!
  updated_at: String!
}

type Query {
  animes: [Anime]!
  anime(id: String!): Anime
}

type Mutation {
  createAnime(data: CreateAnimeInput!): Anime! @auth(requiresRoles: ["admin"])
  updateAnime(data: UpdateAnimeInput!): Anime! @auth(requiresRoles: ["admin"])
  deleteAnime(id: String!): Anime! @auth(requiresRoles: ["admin"])
}
